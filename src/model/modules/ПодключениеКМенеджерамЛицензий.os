#Использовать v8haspmonitor

Перем МониторАппаратныхКлючей;

Процедура Инициализировать()

    ПутьКФайлуНастроек = ".\oscript_modules\v8haspmonitor\examples\nethasp.ini";
    ПутьКИсполняемомуФайлу = ".\oscript_modules\v8haspmonitor\tools\HaspMonitor\HaspMonitor.exe";

    МониторАппаратныхКлючей = Новый МониторАппаратныхКлючей(
        ПутьКФайлуНастроек, ПутьКИсполняемомуФайлу);

КонецПроцедуры

Функция ТаблицыМетрикДляPrometheus() Экспорт

    ТаблицыМетрик = Новый Структура();

    МенеджерыЛицензий = МониторАппаратныхКлючей.СписокМенеджеровЛицензий();
    АппаратныеКлючи = НовыйТаблицаКлючей();
    Подключения = НовыйТаблицаПодключений();

    Для Каждого МенеджерЛицензий Из МенеджерыЛицензий Цикл

        КлючиТекущегоМенеджера = МониторАппаратныхКлючей.СписокКлючейМенеджераЛицензий(
            МенеджерЛицензий.Идентификатор);

        Для Каждого Ключ Из КлючиТекущегоМенеджера Цикл
            НоваяСтрока = АппаратныеКлючи.Добавить();
            НоваяСтрока.Менеджер = МенеджерЛицензий;
            ЗаполнитьЗначенияСвойств(НоваяСтрока, Ключ);

            ТаблицаПодключений = МониторАппаратныхКлючей.СписокПодключений(Ключ);

            Для Каждого Подключение Из ТаблицаПодключений Цикл
                НоваяСтрока = Подключения.Добавить();
                НоваяСтрока.Менеджер = МенеджерЛицензий;
                НоваяСтрока.Ключ = Ключ;
                НоваяСтрока.Количество = 1;
                ЗаполнитьЗначенияСвойств(НоваяСтрока, Подключение);
            КонецЦикла;

        КонецЦикла;

    КонецЦикла;

    ТаблицыМетрик.Вставить("МенеджерыЛицензий", МенеджерыЛицензий);
    ТаблицыМетрик.Вставить("АппаратныеКлючи", АппаратныеКлючи);
    ТаблицыМетрик.Вставить("Подключения", Подключения);

    Возврат ТаблицыМетрик;

КонецФункции

Функция СписокМенеджеровЛицензий() Экспорт

    МенеджерыЛицензий = МониторАппаратныхКлючей.СписокМенеджеровЛицензий();

    Возврат МенеджерыЛицензий;

КонецФункции

Функция НовыйТаблицаКлючей()
    
    ТаблицаКлючей = Новый ТаблицаЗначений;
    ТаблицаКлючей.Колонки.Добавить("Менеджер");
    ТаблицаКлючей.Колонки.Добавить("ПорядковыйНомер");
    ТаблицаКлючей.Колонки.Добавить("Тип");
    ТаблицаКлючей.Колонки.Добавить("МаксимальноеКоличествоПодключений");
    ТаблицаКлючей.Колонки.Добавить("ТекущееКоличествоПодключений");
    
    Возврат ТаблицаКлючей;

КонецФункции

Функция НовыйТаблицаПодключений()

    ТаблицаПодключений = Новый ТаблицаЗначений;
    ТаблицаПодключений.Колонки.Добавить("Менеджер");
    ТаблицаПодключений.Колонки.Добавить("Ключ");
    ТаблицаПодключений.Колонки.Добавить("Номер");
    ТаблицаПодключений.Колонки.Добавить("АдресХоста");
    ТаблицаПодключений.Колонки.Добавить("ИмяХоста");
    ТаблицаПодключений.Колонки.Добавить("Протокол");
    ТаблицаПодключений.Колонки.Добавить("Таймаут");
    ТаблицаПодключений.Колонки.Добавить("Количество");
    
    Возврат ТаблицаПодключений;

КонецФункции

Инициализировать();