
&HTTPMethod("GET")
Функция get() Экспорт

    ТаблицыМетрик = ПодключениеКМенеджерамЛицензий.ТаблицыМетрикДляPrometheus();

    Результат = ПреобразоватьКФорматуPrometheus(ТаблицыМетрик);    

    Возврат Содержимое(Результат);

КонецФункции

Функция ПреобразоватьКФорматуPrometheus(ТаблицыМетрик)

    Текст = Новый Массив();

    Если ТаблицыМетрик.МенеджерыЛицензий.Количество() > 0 Тогда
        МенеджерыЛицензий_ФорматPrometheus(ТаблицыМетрик.МенеджерыЛицензий, Текст);
        Текст.Добавить(" ");
    КонецЕсли;

    Если ТаблицыМетрик.АппаратныеКлючи.Количество() > 0 Тогда
        АппаратныеКлючи_ФорматPrometheus(ТаблицыМетрик.АппаратныеКлючи, Текст);
        Текст.Добавить(" ");
    КонецЕсли;

    Если ТаблицыМетрик.Подключения.Количество() > 0 Тогда
        Подключения_ФорматPrometheus(ТаблицыМетрик.Подключения, Текст);
        Текст.Добавить(" ");
    КонецЕсли;

    Возврат СтрСоединить(Текст, Символы.ПС);
    
КонецФункции

Процедура МенеджерыЛицензий_ФорматPrometheus(МенеджерыЛицензий, Текст)

    Текст.Добавить(СтрШаблон("# HELP %1 %2", "hasp_lm_info", "Information about HASP license managers"));
    Текст.Добавить(СтрШаблон("# TYPE %1 gauge", "hasp_lm_info"));

    Для Каждого ТекМенеджер Из МенеджерыЛицензий Цикл

        СтрокаИзмерителя = СтрШаблон("hasp_lm_info{id=%1,name=%2,protocol=%3} 1",
            ОбернутьВКавычки(ТекМенеджер.Идентификатор),
            ОбернутьВКавычки(ТекМенеджер.Имя),
            ОбернутьВКавычки(ТекМенеджер.Протокол));
        
        Текст.Добавить(СтрокаИзмерителя);

    КонецЦикла;

КонецПроцедуры // МенеджерыЛицензий_ФорматPrometheus()

Процедура АппаратныеКлючи_ФорматPrometheus(АппаратныеКлючи, Текст)

    Текст.Добавить(СтрШаблон("# HELP %1 %2", "hasp_cur_load", "Information about current keys load"));
    Текст.Добавить(СтрШаблон("# TYPE %1 gauge", "hasp_cur_load"));

    Для Каждого ТекСтрока Из АппаратныеКлючи Цикл

        СтрокаИзмерителя = СтрШаблон("hasp_cur_load{lm_name=%1,ma=%2,type=%3,max_users=%4} %5",
            ОбернутьВКавычки(ТекСтрока.Менеджер.Имя),
            ОбернутьВКавычки(ТекСтрока.АдресМодуля),
            ОбернутьВКавычки(ТекСтрока.Тип),
            ОбернутьВКавычки(ТекСтрока.МаксимальноеКоличествоПодключений),
            ТекСтрока.ТекущееКоличествоПодключений);
        
        Текст.Добавить(СтрокаИзмерителя);

    КонецЦикла;

КонецПроцедуры // АппаратныеКлючи_ФорматPrometheus()

Процедура Подключения_ФорматPrometheus(Подключения, Текст)

    ПодключенияСвернутая = Подключения.Скопировать();
    ПодключенияСвернутая.Свернуть("Менеджер, Ключ, АдресХоста, ИмяХоста", "Количество");

    Текст.Добавить(СтрШаблон("# HELP %1 %2", "hasp_sessions_info", "Information about key sessions"));
    Текст.Добавить(СтрШаблон("# TYPE %1 gauge", "hasp_sessions_info"));

    Для Каждого ТекСтрока Из ПодключенияСвернутая Цикл

        // Метка не появится если её значение будет пустое
        ИмяХоста = ?(ЗначениеЗаполнено(ТекСтрока.ИмяХоста), ТекСтрока.ИмяХоста, "null"); 

        СтрокаИзмерителя = СтрШаблон("hasp_sessions_info{lm_name=%1,ma=%2,host_address=%3,host_name=%4} %5",
            ОбернутьВКавычки(ТекСтрока.Менеджер.Имя),
            ОбернутьВКавычки(ТекСтрока.Ключ.АдресМодуля),
            ОбернутьВКавычки(ТекСтрока.АдресХоста),
            ОбернутьВКавычки(ИмяХоста),
            ТекСтрока.Количество);
        
        Текст.Добавить(СтрокаИзмерителя);

    КонецЦикла;

КонецПроцедуры // Подключения_ФорматPrometheus()

// Функция добавляет кавычки в начале и в конце переданной строки
//   
// Параметры:
//   Строка         - Строка        - Строка для добавления кавычек
//
// Возвращаемое значение:
//    Строка - строка с добавленными кавычками
//
Функция ОбернутьВКавычки(Знач Строка)
    Если Лев(Строка, 1) = """" И Прав(Строка, 1) = """" Тогда
        Возврат Строка;
    Иначе
        Возврат """" + Строка + """";
    КонецЕсли;
КонецФункции