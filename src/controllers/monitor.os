
&HTTPMethod("GET")
Функция get() Экспорт

    Метрика = ЗначенияМаршрута.Получить("metric");

    Если Метрика = "hasp_lm_info" Тогда

        МенеджерыЛицензий = ПодключениеКМенеджерамЛицензий.СписокМенеджеровЛицензий();
    
        Результат = МенеджерыЛицензий_ФорматPrometheus(МенеджерыЛицензий);    

    ИначеЕсли Метрика = "hasp_cur_load" Тогда

        АппаратныеКлючи = ПодключениеКМенеджерамЛицензий.СписокАппаратныхКлючей();
    
        Результат = АппаратныеКлючи_ФорматPrometheus(АппаратныеКлючи);    
        
    ИначеЕсли Метрика = "sessions" Тогда

    Иначе
        Результат = ПримерМетрикиВФорматеPrometheus();
    КонецЕсли;

    Возврат Содержимое(Результат);

КонецФункции

Функция МенеджерыЛицензий_ФорматPrometheus(МенеджерыЛицензий)

    Текст = Новый Массив();

    Текст.Добавить(СтрШаблон("# HELP %1 %2", "hasp_lm_info", "Information about HASP license managers"));
    Текст.Добавить(СтрШаблон("# TYPE %1 gauge", "hasp_lm_info"));

    Для Каждого ТекМенеджер Из МенеджерыЛицензий Цикл

        СтрокаИзмерителя = СтрШаблон("hasp_lm_info{id=%1,name=%2,protocol=%3} 1",
            ОбернутьВКавычки(ТекМенеджер.Идентификатор),
            ОбернутьВКавычки(ТекМенеджер.Имя),
            ОбернутьВКавычки(ТекМенеджер.Протокол));
        
        Текст.Добавить(СтрокаИзмерителя);

    КонецЦикла;

    Возврат СтрСоединить(Текст, Символы.ПС);

КонецФункции // МенеджерыЛицензий_ФорматPrometheus()

Функция АппаратныеКлючи_ФорматPrometheus(АппаратныеКлючи)

    Текст = Новый Массив();

    Текст.Добавить(СтрШаблон("# HELP %1 %2", "hasp_cur_load", "Information about current keys load"));
    Текст.Добавить(СтрШаблон("# TYPE %1 gauge", "hasp_cur_load"));

    Для Каждого ТекСтрока Из АппаратныеКлючи Цикл

        СтрокаИзмерителя = СтрШаблон("hasp_cur_load{lm_name=%1,lm_id=%2,ma=%3,type=%4,max_users=%5} %6",
            ОбернутьВКавычки(ТекСтрока.ИмяМенеджера),
            ОбернутьВКавычки(ТекСтрока.ИдентификаторМенеджера),
            ОбернутьВКавычки(ТекСтрока.ПорядковыйНомер),
            ОбернутьВКавычки(ТекСтрока.Тип),
            ОбернутьВКавычки(ТекСтрока.МаксимальноеКоличествоПодключений),
            ТекСтрока.ТекущееКоличествоПодключений);
        
        Текст.Добавить(СтрокаИзмерителя);

    КонецЦикла;

    Возврат СтрСоединить(Текст, Символы.ПС);

КонецФункции // АппаратныеКлючи_ФорматPrometheus()

Функция ПримерМетрикиВФорматеPrometheus()

    Текст = Новый Массив();

    Текст.Добавить(СтрШаблон("# HELP %1 %2", "metric_name", "My example metic"));
    Текст.Добавить(СтрШаблон("# TYPE %1 metric_type", "metric_name"));

    СтрокаИзмерителя = "metric_name{label1=value1,label2=value3,label3=value3} value";
    
    Текст.Добавить(СтрокаИзмерителя);
    Текст.Добавить(" ");

    Возврат СтрСоединить(Текст, Символы.ПС);

КонецФункции // ПримерМетрикиВФорматеPrometheus()

// Функция добавляет кавычки в начале и в конце переданной строки
//   
// Параметры:
//   Строка         - Строка        - Строка для добавления кавычек
//
// Возвращаемое значение:
//    Строка - строка с добавленными кавычками
//
Функция ОбернутьВКавычки(Знач Строка)
    Если Лев(Строка, 1) = """" И Прав(Строка, 1) = """" Тогда
        Возврат Строка;
    Иначе
        Возврат """" + Строка + """";
    КонецЕсли;
КонецФункции